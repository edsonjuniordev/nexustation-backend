// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String @id @default(uuid()) @db.Uuid
  email     String @unique
  password  String
  name      String
  createdAt String @map("created_at")
  updatedAt String @map("updated_at")

  products Product[]
  sales    Sales[]

  @@map("users")
}

model Product {
  id        String @id @default(uuid()) @db.Uuid
  userId    String @map("user_id") @db.Uuid
  barCode   String @unique @map("bar_code")
  name      String
  value     Int
  createdAt String @map("created_at")
  updatedAt String @map("updated_at")

  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  productSales ProductSales[]

  @@map("products")
}

model Sales {
  id        String @id @default(uuid()) @db.Uuid
  userId    String @map("user_id") @db.Uuid
  value     Int
  createdAt String @map("created_at")
  updatedAt String @map("updated_at")

  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  productSales ProductSales[]

  @@map("sales")
}

model ProductSales {
  id        String @id @default(uuid()) @db.Uuid
  saleId    String @map("sale_id") @db.Uuid
  productId String @map("product_id") @db.Uuid
  name      String
  quantity  Int
  value     Int
  createdAt String @map("created_at")
  updatedAt String @map("updated_at")

  sale    Sales   @relation(fields: [saleId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_sales")
}
